{"version":3,"sources":["redux/consts.js","redux/actions/answerAction.js","Components/Input/index.js","redux/actions/testAction.js","Components/Timer/index.js","Components/Button/index.js","Components/Checkbox/index.js","Components/TestItem/index.js","CONSTS/consts.js","Components/StartScreen/index.js","Components/Quiz/index.js","redux/reducers/testReduser.js","redux/reducers/answerReducer.js","redux/rootReducer.js","App.js","reportWebVitals.js","index.js"],"names":["GET_TEST","RUN_TEST","SWITCH_QUESTION","SAVE_ANSWER","REMOVE_ANSWER","DISABLE_EDIT_ANSWER","SET_TEST_TIME","saveAnswer","index","value","multiselect","type","payload","connect","state","props","answers","tests","currentTestIndex","dispatch","useDispatch","canEdit","canEditAnswer","hasOwnProperty","DEFAULT","disabled","onChange","e","target","className","nextTest","console","log","prevTest","Timer","time","test","timer","useSelector","testsTimers","useEffect","timout","setInterval","_","setCurrentTestTime","clearInterval","t","min","sec","makeTimer","Button","children","onClick","removeAnswerHandler","removeAnswer","id","name","checked","Boolean","indexOf","String","saveAnswerHandler","htmlFor","label","TestItem","lastIndex","question","image","options","src","alt","length","map","elIndex","StartScreen","run","didTestRun","classes","push","join","Quiz","this","onGetTest","React","Component","a","fetch","then","response","json","initialState","rootReducer","combineReducers","action","newAnswers","currAnswer","prevAnswer","filter","i","store","createStore","compose","applyMiddleware","thunk","App","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a735d0dc.chunk.js","sourcesContent":["export const GET_TEST = 'GET_TEST'\r\nexport const RUN_TEST = 'RUN_TEST'\r\nexport const SWITCH_QUESTION = 'SWITCH_QUESTION'\r\nexport const SAVE_ANSWER = 'SAVE_ANSWER'\r\nexport const REMOVE_ANSWER = 'REMOVE_ANSWER'\r\nexport const DISABLE_EDIT_ANSWER = 'DENY_EDIT_ANSWER'\r\nexport const SET_TEST_TIME = 'SET_TEST_TIME'","import {SAVE_ANSWER, DISABLE_EDIT_ANSWER, REMOVE_ANSWER} from \"../consts\";\r\n\r\nexport function saveAnswer({index, value, multiselect}) {\r\n    return {\r\n        type: SAVE_ANSWER,\r\n        payload: {\r\n            index,\r\n            value,\r\n            multiselect\r\n        }\r\n    }\r\n\r\n}\r\n\r\nexport function removeAnswer({index, value, multiselect}) {\r\n    return {\r\n        type: REMOVE_ANSWER,\r\n        payload: {\r\n            index,\r\n            value,\r\n            multiselect\r\n        }\r\n    }\r\n\r\n}\r\n\r\nexport function disableEditAnswer(index) {\r\n    return {\r\n        type: DISABLE_EDIT_ANSWER,\r\n        payload: index\r\n    }\r\n}","import React from \"react\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {saveAnswer} from \"../../redux/actions/answerAction\";\r\nimport {connect} from \"react-redux\";\r\nimport './styles.sass'\r\n\r\n\r\nconst Input = (props) => {\r\n    const value = props.answers.answers[props.tests.currentTestIndex] || ''\r\n    const dispatch = useDispatch()\r\n    const canEdit = props.answers.canEditAnswer.hasOwnProperty([props.tests.currentTestIndex])? props.answers.canEditAnswer[props.tests.currentTestIndex] : props.answers.canEditAnswer.DEFAULT\r\n\r\n    const handleInputDispatch = e => dispatch(\r\n        saveAnswer(\r\n            {\r\n                index: props.tests.currentTestIndex,\r\n                value:  e.target.value\r\n            }\r\n        )\r\n    )\r\n\r\n    return <input\r\n        value={value}\r\n        disabled={!canEdit}\r\n        onChange={handleInputDispatch}\r\n        className={'input'}\r\n    />\r\n}\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    return state\r\n}\r\n\r\nexport default connect(mapStateToProps, null)(Input)\r\n\r\n","import {GET_TEST, RUN_TEST, SET_TEST_TIME, SWITCH_QUESTION} from \"../consts\";\r\n\r\nexport function getTest() {\r\n    return async dispatch =>{\r\n        const json = await fetch('quiz.json')\r\n            .then(response => response.json())\r\n        dispatch({type: GET_TEST, payload: json})\r\n    }\r\n}\r\n\r\nexport function runTest(testRun) {\r\n    return {\r\n        type: RUN_TEST,\r\n        payload: testRun\r\n    }\r\n}\r\n\r\nexport function nextTest() {\r\n    console.log('-------- nextTest------');\r\n\r\n    return {\r\n        type: SWITCH_QUESTION,\r\n        payload: 1\r\n    }\r\n}\r\n\r\nexport function prevTest() {\r\n    console.log('-------- prevTest------');\r\n    return {\r\n        type: SWITCH_QUESTION,\r\n        payload: -1\r\n    }\r\n}\r\n\r\nexport function setCurrentTestTime(test, time) {\r\n    return{\r\n        type: SET_TEST_TIME,\r\n        payload: {test, time}\r\n    }\r\n\r\n}","import React, {useEffect} from \"react\";\r\nimport './styles.sass'\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {disableEditAnswer} from \"../../redux/actions/answerAction\";\r\nimport {setCurrentTestTime} from \"../../redux/actions/testAction\";\r\n\r\nconst Timer = ({time, test}) => {\r\n    const dispatch = useDispatch()\r\n    let timer = useSelector(state => state.tests.testsTimers[test]) ?? time\r\n\r\n    useEffect(() => {\r\n        if (!timer) return;\r\n        const timout = setInterval(_ => {\r\n            timer  && dispatch(setCurrentTestTime(test, --timer))\r\n            if (!timer) {\r\n                clearInterval(timout)\r\n                dispatch(disableEditAnswer(test))\r\n            }\r\n        }, 1000)\r\n        return () => clearInterval(timout)\r\n    }, [])\r\n\r\n    const makeTimer = t => {\r\n        let min = t / 60 | 0\r\n        let sec = t % 60\r\n        return `${min<10? \"0\" : \"\"}${min}:${sec<10? \"0\": \"\"}${sec}`\r\n    }\r\n\r\n    return <div className={'time'}>{makeTimer(timer)}</div>\r\n}\r\n\r\n\r\nexport default Timer","import {useDispatch} from \"react-redux\";\r\nimport './style.sass'\r\n\r\n\r\nconst Button = ({children, payload}) => {\r\n    const dispatch = useDispatch()\r\n    return <button className={\"btn\"} onClick={_=> dispatch(payload())}>{children}</button>\r\n}\r\nexport default Button","import React from \"react\";\r\nimport {saveAnswer, removeAnswer} from \"../../redux/actions/answerAction\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {connect} from \"react-redux\";\r\nimport './styles.sass'\r\n\r\nconst Checkbox = (props) => {\r\n    const dispatch = useDispatch()\r\n    const type = props.multiselect ? 'checkbox' : 'radio'\r\n    const isChecked = () => {\r\n        return (props.answers.answers[props.name] && Boolean(~props.answers.answers[props.name].indexOf(String(props.value)))) || false\r\n    }\r\n\r\n    const saveAnswerHandler = (e) => {\r\n        dispatch(\r\n            saveAnswer(\r\n                {\r\n                    index: props.tests.currentTestIndex,\r\n                    value: e.target.value,\r\n                    multiselect: props.multiselect\r\n                }\r\n            )\r\n        )\r\n    }\r\n\r\n    const removeAnswerHandler = e => {\r\n        dispatch(\r\n            removeAnswer(\r\n                {\r\n                    index: props.tests.currentTestIndex,\r\n                    value: e.target.value,\r\n                    multiselect: props.multiselect\r\n                }\r\n            )\r\n        )\r\n    }\r\n    const handleInputDispatch = e => {\r\n        e.target.checked ? saveAnswerHandler(e) : removeAnswerHandler(e)\r\n    }\r\n    return <div className={'checkbox'}>\r\n        <input\r\n            className={'checkbox_input'}\r\n            type={type}\r\n            id={props.value}\r\n            name={props.name}\r\n            checked={isChecked()}\r\n            value={props.value}\r\n            disabled={!(props.answers.canEditAnswer[props.name] ?? props.answers.canEditAnswer.DEFAULT)}\r\n            onChange={handleInputDispatch}\r\n        />\r\n        <label className={'checkbox_label'} htmlFor={props.value}>{props.label}</label>\r\n    </div>\r\n}\r\nconst mapStateToProps = state => {\r\n    return state\r\n}\r\nexport default connect(mapStateToProps, null)(Checkbox)","import React from 'react'\r\nimport {TEST} from \"../../CONSTS/consts\";\r\nimport Input from \"../Input\";\r\nimport Timer from \"../Timer\";\r\nimport Button from \"../Button\";\r\nimport {nextTest, prevTest} from \"../../redux/actions/testAction\";\r\nimport Checkbox from \"../Checkbox\";\r\nimport './styles.sass'\r\n\r\nconst TestItem = ({test, index, lastIndex}) => {\r\n    const {question, type, image, time, options, multiselect} = test\r\n\r\n    return <div className={'test_card'}>\r\n        <div className={'test_card__question'}>{index+1} {question}</div>\r\n        <div className={'test_card__wrapper'}>\r\n            {image && <img className={'img'} src={image} alt={'test alt text'}/>}\r\n            <div className={'test_card__answers'}>\r\n                {type === TEST && options && options.length?\r\n                    options.map((value, elIndex) => <Checkbox key={index + value} value={elIndex} label={value} name={index} multiselect={multiselect}/>) :\r\n                    <Input/>\r\n                }\r\n            </div>\r\n        </div>\r\n\r\n\r\n        {time && <Timer key={index} time={time} test={index}/>}\r\n        <div className={'test_card__btn_container'}>\r\n            {index? <Button payload={prevTest}>Prev</Button>: null}\r\n            {lastIndex !== index ? <Button payload={nextTest}>Next</Button>: null}\r\n        </div>\r\n\r\n\r\n    </div>\r\n}\r\n\r\nexport default TestItem","export const TEST = 'test'\r\nexport const QUESTION = 'question'","import React from \"react\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {runTest} from \"../../redux/actions/testAction\";\r\nimport './styles.sass'\r\n\r\nconst StartScreen = () => {\r\n    const dispatch = useDispatch()\r\n    const run = useSelector(state => state.tests.didTestRun)\r\n    const classes = ['startScreen']\r\n    run && classes.push('activeTest')\r\n    return <div className={classes.join(' ')}>\r\n            <button onClick={()=>dispatch(runTest(!run))}>{run? \"Stop test\":'Run test'}</button>\r\n        </div>\r\n}\r\n\r\nexport default StartScreen","import React from 'react';\r\nimport TestItem from \"../TestItem\";\r\nimport StartScreen from \"../StartScreen\";\r\nimport {connect} from \"react-redux\";\r\nimport {getTest} from \"../../redux/actions/testAction\";\r\n\r\nclass Quiz extends React.Component{\r\n    componentDidMount() {\r\n        this.props.onGetTest()\r\n    }\r\n\r\n    render(){\r\n        return <>\r\n            <StartScreen/>\r\n            { this.props.didTestRun &&  <TestItem test={this.props.tests[this.props.currentTestIndex]} index={this.props.currentTestIndex} lastIndex={this.props.tests.length-1}/> }\r\n        </>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return state.tests\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onGetTest: _ => {\r\n            dispatch(getTest())\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Quiz)","import {GET_TEST, RUN_TEST, SET_TEST_TIME, SWITCH_QUESTION} from \"../consts\";\r\n\r\nconst initialState={\r\n    tests: [],\r\n    currentTestIndex: 0,\r\n    testsTimers:{},\r\n    didTestRun: false\r\n}\r\n\r\nexport const testReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case GET_TEST:\r\n            return {...state, tests: action.payload};\r\n        case RUN_TEST:\r\n            return  {...state, didTestRun: action.payload};\r\n        case SWITCH_QUESTION:\r\n            return {...state, currentTestIndex: state.currentTestIndex + action.payload}\r\n        case SET_TEST_TIME:\r\n            return {\r\n                ...state, testsTimers: {\r\n                    ...state.testsTimers,\r\n                    [action.payload.test]: action.payload.time\r\n                }\r\n            }\r\n        default: return state\r\n    }\r\n}","import {SAVE_ANSWER, DISABLE_EDIT_ANSWER, REMOVE_ANSWER} from \"../consts\";\r\n\r\nconst initialState={\r\n    answers: {},\r\n    canEditAnswer:{\r\n        DEFAULT: true\r\n    }\r\n}\r\n\r\nexport const answerReducer = (state = initialState, action) => {\r\n    let newAnswers\r\n\r\n    switch (action.type) {\r\n        case SAVE_ANSWER:\r\n            let currAnswer = state.answers[action.payload.index] || []\r\n            newAnswers = {\r\n                [action.payload.index]: action.payload.multiselect? [...currAnswer, action.payload.value]: action.payload.value\r\n            }\r\n            return {...state, answers: {\r\n                ...state.answers,\r\n                ...newAnswers}\r\n            }\r\n        case DISABLE_EDIT_ANSWER:\r\n            return{...state, canEditAnswer: {\r\n                ...state.canEditAnswer,\r\n                [action.payload]: false\r\n            }}\r\n        case REMOVE_ANSWER:\r\n            let prevAnswer = state.answers[action.payload.index] || []\r\n            newAnswers = {\r\n                [action.payload.index]: action.payload.multiselect? prevAnswer.filter(i=>i !== action.payload.value): null\r\n            }\r\n            return {...state, answers: {\r\n                    ...state.answers,\r\n                    ...newAnswers}\r\n            }\r\n\r\n\r\n        default: return state\r\n    }\r\n}","import {combineReducers} from \"redux\";\r\nimport {testReducer} from \"./reducers/testReduser\";\r\nimport {answerReducer} from \"./reducers/answerReducer\";\r\n\r\nexport const rootReducer = combineReducers({\r\n    tests: testReducer,\r\n    answers: answerReducer\r\n})","import './App.sass';\nimport './CONSTS/consts.sass';\nimport Quiz from './Components/Quiz'\nimport {BrowserRouter, Route, Switch} from 'react-router-dom';\nimport {applyMiddleware, compose, createStore} from \"redux\";\nimport {Provider} from \"react-redux\";\nimport thunk from 'redux-thunk';\nimport {rootReducer} from \"./redux/rootReducer\";\n\nconst store = createStore(rootReducer, compose(applyMiddleware(thunk)))\n\nfunction App() {\n  return (\n      <Provider store={store}>\n          <BrowserRouter>\n              <Switch>\n                  <Route path={'/'} component={Quiz}/>\n              </Switch>\n          </BrowserRouter>\n      </Provider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}